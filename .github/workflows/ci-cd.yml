name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./MonProjet/projet-devops
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run frontend tests
        run: npm test

  build-backend-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./MonProjet/DEVOPS-API
          file: ./MonProjet/DEVOPS-API/.dockerfile
          push: true
          tags: hugopere55/backend-microservices:latest

  build-frontend-docker:
    runs-on: ubuntu-latest
    needs: test-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./MonProjet/projet-devops
          file: ./MonProjet/projet-devops/.dockerfile
          push: true
          tags: hugopere55/frontend-microservices:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build-backend-docker, build-frontend-docker]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Deploy to Cloudron
  #       run: |
  #         # Déployer le backend sur Cloudron
  #         curl -X POST https://<cloudron_domain>/api/v1/apps/<backend_app_id>/deploy \
  #         -H "Authorization: Bearer ${{ secrets.CLOUDRON_API_TOKEN }}" \
  #         -H "Content-Type: application/json" \
  #         -d '{
  #           "dockerImage": "hugopere55/backend-microservices:latest",
  #           "portMapping": [{"containerPort": 5000, "hostPort": 5000}]
  #         }'

  #         # Déployer le frontend sur Cloudron
  #         curl -X POST https://<cloudron_domain>/api/v1/apps/<frontend_app_id>/deploy \
  #         -H "Authorization: Bearer ${{ secrets.CLOUDRON_API_TOKEN }}" \
  #         -H "Content-Type: application/json" \
  #         -d '{
  #           "dockerImage": "hugopere55/frontend-microservices:latest",
  #           "portMapping": [{"containerPort": 3000, "hostPort": 3000}]
  #         }'
